// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/go-template/internal/server/httperr (interfaces: ResponderInterface)

// Package mock_httperr is a generated GoMock package.
package mock_httperr

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponderInterface is a mock of ResponderInterface interface.
type MockResponderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockResponderInterfaceMockRecorder
}

// MockResponderInterfaceMockRecorder is the mock recorder for MockResponderInterface.
type MockResponderInterfaceMockRecorder struct {
	mock *MockResponderInterface
}

// NewMockResponderInterface creates a new mock instance.
func NewMockResponderInterface(ctrl *gomock.Controller) *MockResponderInterface {
	mock := &MockResponderInterface{ctrl: ctrl}
	mock.recorder = &MockResponderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponderInterface) EXPECT() *MockResponderInterfaceMockRecorder {
	return m.recorder
}

// Respond mocks base method.
func (m *MockResponderInterface) Respond(arg0 http.ResponseWriter, arg1 int, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Respond", arg0, arg1, arg2)
}

// Respond indicates an expected call of Respond.
func (mr *MockResponderInterfaceMockRecorder) Respond(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Respond", reflect.TypeOf((*MockResponderInterface)(nil).Respond), arg0, arg1, arg2)
}
