name: latest
on:
  push:
    branches: [main]
    paths:
      - .github/workflows/latest.yml
      - cmd/**
      - internal/**
      - pkg/**
      - .dockerignore
      - .golangci.yml
      - Dockerfile
      - go.mod
      - go.sum

jobs:
  base:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        volumes:
          - /tmp/docker-registry:/var/lib/registry
    steps:
      - name: Cache Docker registry
        uses: actions/cache@v2
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.sha }}
      - uses: actions/checkout@v2
      - env:
          DOCKER_BUILDKIT: 1
        run: docker build --target base -t localhost:5000/base .
      - run: docker push localhost:5000/base

  test:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        volumes:
          - /tmp/docker-registry:/var/lib/registry
    steps:
      - name: Cache Docker registry
        uses: actions/cache@v2
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.sha }}
      - run: docker pull localhost:5000/base
      - run: docker tag localhost:5000/base base
      - name: Run tests in container
        run: |
          docker run --rm -e CGO_ENABLED=1 base \
          go test \
          -race \
          -coverpkg=./... \
          -coverprofile=coverage.txt \
          -covermode=atomic \
          ./...

  lint:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        volumes:
          - /tmp/docker-registry:/var/lib/registry
    steps:
      - name: Cache Docker registry
        uses: actions/cache@v2
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.sha }}
      - run: docker pull localhost:5000/base
      - run: docker tag localhost:5000/base base
      - uses: actions/checkout@v2
      - env:
          DOCKER_BUILDKIT: 1
          # BUILDKIT_INLINE_CACHE: 1
        run: docker build --target lint --cache-from base .

  tidy:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        volumes:
          - /tmp/docker-registry:/var/lib/registry
    steps:
      - name: Cache Docker registry
        uses: actions/cache@v2
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.sha }}
      - run: docker pull localhost:5000/base
      - run: docker tag localhost:5000/base base
      - uses: actions/checkout@v2
      - env:
          DOCKER_BUILDKIT: 1
          # BUILDKIT_INLINE_CACHE: 1
        run: docker build --target tidy --cache-from base .

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint, tidy]
    steps:
      - uses: docker/login-action@v1
        with:
          username: qmcgaw
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v6,linux/arm/v7,linux/s390x,linux/ppc64le
          build-args: |
            BUILD_DATE={{ date -u +%Y-%m-%dT%H:%M:%SZ }}
            COMMIT={{ git rev-parse --short HEAD }}
            VERSION=latest
          tags: qmcgaw/reponame_docker:latest
          push: true
      - run: curl -X POST https://hooks.microbadger.com/images/qmcgaw/REPONAME_DOCKER/WEBHOOK_LINK
        continue-on-error: true
